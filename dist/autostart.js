function __run__(){"use strict";var e={darwin:path.resolve(process.argv[0],"..","..",".."),win32:process.argv[0],linux:process.argv[0]}[os.platform()],n=new autolaunch({name:"Rain",path:e,isHidden:!0});n.isEnabled().then(function(e){return e?void 0:n.enable()})}function __clean__login_item__(){return new Promise(function(e){var n=new autolaunch({name:"Rain",isHidden:!0});n.isEnabled().then(function(e){return e?n.disable():void 0}).then(e)})}function __clean__(){"use strict";return new Promise(function(e){if("darwin"===os.platform()){var n=path.resolve(os.homedir(),"Library","LaunchAgents","vg.rain.osx.plist");fs.existsSync(n)&&fs.remove(n),e()}else if("win32"===os.platform()){var r=new registry({hive:registry.HKCU,key:"\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"});r.values(function(n,r){if(!n)for(var i=0;i<r.length;i++)if("Startup"===r[i].name){var s=path.join(r[i].value,"Rain.lnk");fs.existsSync(s)&&fs.remove(s)}e()})}else if("linux"===os.platform()){var i=path.resolve(os.homedir(),".config","upstart","rain.conf");fs.existsSync(i)&&fs.remove(i),e()}})}var autolaunch=require("auto-launch"),fs=require("fs-extra"),os=require("os"),path=require("path"),registry=require("winreg");module.exports=function(){"use strict";__clean__login_item__().then(__clean__).then(__run__)};